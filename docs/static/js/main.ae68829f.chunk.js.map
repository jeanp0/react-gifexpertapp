{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAC5CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCQZG,EAfF,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DACRC,EADQ,iDACwCC,UACpDR,GAFY,+DAISS,MAAMF,GAJf,cAIRG,EAJQ,gBAKSA,EAASC,OALlB,uBAKNC,EALM,EAKNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYPM,GAZO,4CAAH,sDCwBEO,EArBM,SAACpB,GAAc,IAAD,EACPR,mBAAS,CACjCoB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAkBjC,OAXAC,qBAAU,WACRnB,EAAQL,GAAUyB,MAAK,SAACC,GAAD,OACrBC,YAAW,WACTJ,EAAS,CACPX,KAAMc,EACNL,SAAS,MAEV,UAEJ,CAACrB,IAEGsB,GCTMM,EAVK,SAAC,GAAuB,EAArBZ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OACE,sBAAKsB,UAAU,yCAAf,UACE,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,4BAAIA,QCcKe,EAjBC,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAAe,EACEoB,EAAapB,GAAjCkB,EADkB,EACxBN,KAAcS,EADU,EACVA,QAEtB,OACE,qCACE,oBAAIQ,UAAU,oCAAd,SAAmD7B,IAClDqB,GAAW,mBAAGQ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGX,EAAOJ,KAAI,SAACC,GAAD,OAEV,aADA,CACC,EAAD,eAA8BA,GAAZA,EAAIC,aCQjBiB,EAlBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,gBADrB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG2C,EAAWpB,KAAI,SAACd,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVxBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae68829f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CategoryAdd = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((category) => [inputValue, ...category]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nCategoryAdd.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default CategoryAdd;\n","const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=IkhRRwVVTTHFLyaH08HWpJQ5D6KHSaHM`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n  const gifs = data.map((img) => ({\n    id: img.id,\n    title: img.title,\n    url: img.images?.downsized_medium.url,\n  }));\n\n  return gifs;\n};\n\nexport default getGifs;\n","import { useEffect, useState } from \"react\";\nimport getGifs from \"../helpers/getGifs\";\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  // solo se ejecuta al renderizar el componente por primera vez ([])\n  useEffect(() => {\n    getGifs(category).then((imgs) =>\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 1000)\n    );\n  }, [category]);\n\n  return state; //{ data: [], loading: true };\n};\n\nexport default useFetchGifs;\n","import React from \"react\";\n\nconst GifGridItem = ({ id, title, url }) => {\n  // console.log({ id, title, url });\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from \"react\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          // se env√≠a objetos con cada imagen del array images\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from \"react\";\nimport CategoryAdd from \"./components/CategoryAdd\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Dragon Ball\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <CategoryAdd setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}